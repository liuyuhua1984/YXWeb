<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	 xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

    <context:component-scan base-package="com.gamecenter.qqsdk.controller,com.gamecenter.api.controller"/>
 <!-- 访问静态资源 标签配置静态资源文件不需要走控制器，直接映射到mapping -->
	<mvc:resources mapping="/js/**" location="/js/" />
	<mvc:resources mapping="/img/**" location="/img/" />
	<mvc:resources mapping="/css/**" location="/css/" />
	<mvc:resources mapping="/font/**" location="/font/" />
	<!-- or <mvc:default-servlet-handler/> 与上面mvc:resources标签选其一即可,这里如果配置，必须配置<mvc:annotation-driven/>其他controller才可正常工作 -->
	<!-- 解决@ResponseBody注解直接返回对象并转换成JSON时出现406问题，同时解决了返回String类型乱码的问题 -->
	<mvc:annotation-driven>
		<mvc:message-converters>
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>text/plain;charset=UTF-8</value>
						<value>text/html;charset=UTF-8</value>
					</list>
				</property>
			</bean>
			<!-- org.springframework.http.converter.json.MappingJackson2HttpMessageConverter -->

			<bean
				class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>text/html;charset=UTF-8</value>
						<value>text/json;charset=UTF-8</value>
						<value>application/json; charset=UTF-8</value>
						<value>application/x-www-form-urlencoded; charset=UTF-8</value>
					</list>
				</property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>


	<!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->
	<!-- <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"> -->
	<!-- <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter"> 
		<property name="messageConverters"> <list> <ref bean="mappingJacksonHttpMessageConverter" 
		/> </list> </property> </bean> -->
	<!--避免IE执行AJAX时，返回JSON出现下载文件 -->
	<!-- 解决 HttpMediaTypeNotAcceptableException: Could not find acceptable representation -->
	<!-- <bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"> 
		<property name="supportedMediaTypes"> <list> <value>text/html;charset=UTF-8</value> 
		<value>text/json;charset=UTF-8</value> <value>application/json;charset=UTF-8</value> 
		</list> </property> </bean> -->
	<!-- 定义跳转的文件的前后缀 ，视图模式配置 -->

	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
		<!-- 注意JSP的这个视图解析器order必须在最后 -->
		<property name="order" value="2" />
		<property name="prefix" value="/html/" />
		<property name="suffix" value=".html" />
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
	</bean>

	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
		<!-- 注意JSP的这个视图解析器order必须在最后 -->
		<property name="order" value="0" />
		<property name="prefix" value="/views/" />
		<property name="suffix" value=".jsp" />
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
	</bean>

	<!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->

	<!-- ======================== File Upload ============================= -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding">
			<value>utf-8</value>
		</property>
		<!-- set the max upload size100MB -->
		<property name="maxUploadSize">
			<value>104857600</value>
		</property>
		<property name="maxInMemorySize">
			<value>4096</value>
		</property>
	</bean>

    <mvc:interceptors>
        <bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor"/>
    </mvc:interceptors>
    <bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver"/>


</beans>
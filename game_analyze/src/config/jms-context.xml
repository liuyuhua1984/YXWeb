<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jms="http://www.springframework.org/schema/jms"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
		http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms-4.3.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.3.xsd">

    <bean id="targetConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
        <property name="brokerURL" value="tcp://127.0.0.1:61616"/>
    </bean>
	<!-- ActiveMQ为我们提供了一个PooledConnectionFactory，通过往里面注入一个ActiveMQConnectionFactory 
		可以用来将Connection、Session和MessageProducer池化，这样可以大大的减少我们的资源消耗。 要依赖于 activemq-pool包 -->
	<bean id="pooledConnectionFactory" class="org.apache.activemq.pool.PooledConnectionFactory">
		<property name="connectionFactory" ref="targetConnectionFactory" />
		<property name="maxConnections" value="50" />
	</bean>
	
		<!-- Spring用于管理真正的ConnectionFactory的ConnectionFactory -->
	<bean id="connectionFactory"
		class="org.springframework.jms.connection.SingleConnectionFactory">
		<!-- 目标ConnectionFactory对应真实的可以产生JMS Connection的ConnectionFactory -->
		<property name="targetConnectionFactory" ref="pooledConnectionFactory" />
	</bean>
	
    <!--消息类别列表定义-->
    <bean id="statusMsg" class="org.apache.activemq.command.ActiveMQQueue">
        <constructor-arg index="0">
            <value>statusMsg</value>
        </constructor-arg>
    </bean>
    <bean id="gamedata" class="org.apache.activemq.command.ActiveMQQueue">
        <constructor-arg index="0">
            <value>gamedata</value>
        </constructor-arg>
    </bean>

    <!--核心JmsTemplate-->
    <bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory" ref="targetConnectionFactory"/>
        <property name="defaultDestination" ref="statusMsg"/>
    </bean>

    <!--JMS事务-->
    <bean id="jmsTransactionManager" class="org.springframework.jms.connection.JmsTransactionManager">
        <property name="connectionFactory" ref="targetConnectionFactory"/>
    </bean>
    <tx:annotation-driven transaction-manager="jmsTransactionManager"/>

    <!-- 信息监听接受-->
    <jms:listener-container connection-factory="targetConnectionFactory">
        <jms:listener destination="gamedata" ref="logicHandler"/>
        <jms:listener destination="statusMsg" ref="statusHandler"/>
    </jms:listener-container>


    <!--订阅主题-->
    <bean id="statusConTopic" class="org.apache.activemq.command.ActiveMQTopic">
        <constructor-arg index="0" value="statusCon"></constructor-arg>
    </bean>

</beans>
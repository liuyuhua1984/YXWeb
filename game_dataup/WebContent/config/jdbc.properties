druid.driverClassName=com.mysql.jdbc.Driver
#druid.url=jdbc:mysql://127.0.0.1:3306/yxt?useUnicode=true&amp;characterEncoding=UTF-8&useSSL=false
druid.url=jdbc:mysql://127.0.0.1:3306/dragon_ball_game_server_log?useUnicode=true&amp;characterEncoding=UTF-8&useSSL=false&autoReconnect=true
druid.username=root
druid.password=987654321
#druid.password=75A4Ykwu9fW@
#druid_config
#配置监控统计拦截的filters，去掉后监控界面sql无法统计
#属性类型是字符串，通过别名的方式配置扩展插件，
#常用的插件有：
#监控统计用的filter:stat 
#日志用的filter:log4j 
#防御sql注入的filter:wall
druid.filters=stat
#配置初始化大小 
druid.initialSize=5
#最大连接池数量
druid.maxActive=50
#最小连接池数量
druid.minIdle=5
#second
#获取连接时最大等待时间，单位毫秒。配置了maxWait之后，
#缺省启用公平锁，并发效率会有所下降，
#如果需要可以通过配置useUnfairLock属性为true使用非公平锁
druid.maxWait=60000
#配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
druid.timeBetweenEvictionRunsMillis=60000
#建议配置为true，不影响性能，并且保证安全性。
#申请连接的时候检测，如果空闲时间大于
#timeBetweenEvictionRunsMillis，
#执行validationQuery检测连接是否有效。
druid.testWhileIdle=true

#用来检测连接是否有效的sql，要求是一个查询语句。
#如果validationQuery为null，testOnBorrow、testOnReturn、
#testWhileIdle都不会其作用。
druid.validationQuery=select 'x'
#申请连接时执行validationQuery检测连接是否有效，
#做了这个配置会降低性能。
druid.testOnBorrow=false
#归还连接时执行validationQuery检测连接是否有效，
#做了这个配置会降低性能
druid.testOnReturn=false
#配置一个连接在池中最小生存的时间，单位是毫秒
druid.minEvictableIdleTimeMillis=300000
#打开PSCache，并且指定每个连接上PSCache的大小 --> 
#<!-- 如果用Oracle，则把poolPreparedStatements配置为true，mysql可以配置为false。分库分表较多的数据库，建议配置为false。
druid.poolPreparedStatements=false

#要启用PSCache，必须配置大于0，当大于0时，
#poolPreparedStatements自动触发修改为true。
#在Druid中，不会存在Oracle下PSCache占用内存过多的问题，
#可以把这个数值配置大一些，比如说100
druid.maxPoolPreparedStatementPerConnectionSize=100
